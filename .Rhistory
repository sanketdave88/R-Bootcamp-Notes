mtcars
is.na(mtcars)
mtcars
## use character columns of names to get sensible sort order
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
authors
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
books
books
authors
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m1 <- merge(authors, books, by.x = "surname"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m1 <- merge(books, authors,  by.x = "surname", by.y = "name"))
(m1 <- merge(books, authors,  by.y = "surname", by.x = "name"))
age <- c(22,25,26)
weight <- c(150,165,120)
sex <- c('M','M','F')
data.frame(c('Sam','Frank','Amy'),age,weight,sex)
data.frame(names('Sam','Frank','Amy'),age,weight,sex)
data.frame(row.names = c('Sam','Frank','Amy'
),age,weight,sex)
data.frame(row.names = c('Sam','Frank','Amy'
),age,weight,sex)
is.data.frame(mtcars)
mat <- matrix(1:25,nrow = 5)
mat
as.data.frame(mat)
dg <- mtcars
head(df)
df <- mtcars
head(df)
df.mpg
df$mpg
mean(df$mpg)
df[df$cyl == 6,]
df[,c('am','gear','carb')]
df$performance <- df$hp/df$wt
head(df)
round(df$performance,2)
head(df)
df$performance <- round(df$performance,2)
head(df)
help(subset())
help(subset)
head(df)
df1 <- df$mpg[,df$hp>100 & df$wt>2.5]
df1 <- df$mpg[,df$hp >100 & df$wt >2.5]
df1 <- df$mpg[,df[df$hp >100 & df$wt >2.5]]
head(df)
df[df$hp>100 & df$wt>2.5, df$mpg]
df[[df$hp>100 & df$wt>2.5, df$mpg]]
df[(df$hp>100 & df$wt>2.5), df$mpg]
df[(df$hp > 100 & df$wt > 2.5), df$mpg]
df1 <- df[(df$hp > 100 & df$wt > 2.5), df$mpg]
head(df)
df1 <- df[(df$hp > 100 & df$wt > 2.5),]
df1
df1 <- df[(df$hp > 100 & df$wt > 2.5),'mpg']
df1
mean(df1)
df['Hornet Sportabout','mpg']
days <- c('mon','tues','wed','thu','fri')
temp <- c(23,21,22,26,25)
rain <- c(F,F,F,T,F)
data.frame(days,temp,rain)
help("data.frame")
df<-data.frame(days,temp,rain)
df
df[1,]
df[,1]
df<-data.frame(row.names =  c('a','b','c','d','e'),days,temp,rain)
df
subset(df,rain = TRUE)
subset(df,rain == TRUE)
subset(df,rain == F)
subset(df,rain == F & temp > 21)
df[(df$rain == F & temp > 21),'days']
as.data.frame(df[(df$rain == F & temp > 21),'days'])
rain <- c(F,F,F,T,)
rain <- c(F,F,F,T,"")
rain <- c(F,F,F,T,F)
df
as.data.frame(df[(df$rain == F & temp > 21),'days'])
as.data.frame(row.names = days,df[(df$rain == F & temp > 21),'days'])
help("as.data.frame")
as.data.frame(col.names = days,df[(df$rain == F & temp > 21),'days'])
as.data.frame(col.names = 'days',df[(df$rain == F & temp > 21),'days'])
install.packages(readxl)
install.packages("readxl")
library(readxl)
install.packages("xlsx")
library(xlxs)
library(xlsx)
readxl_example()
readxl("datasets.xlsx")
readxl_example()
library(xlsx)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
x <- 4L
class(x)
x <- c(4, TRUE)
case.names(x)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
x<- 1:4
y<- 2:#
y<- 2:3
y<- 2:3
x
y
x+y
class(x+y)
x <- c(17, 14, 4, 5, 13, 12, 10)
x>10
x>10 <- 4
(x>10) <- 4
x[x>10]
x[x>10] <-4
x
read.csv(hw1_data)
read.csv("hw1_data.csv")
df <- read.csv("hw1_data.csv")
columns(df)
head(df)
nrows(df)
nrow(df)
df[47,'Ozone']
is.na(df$Ozone)
any(is.na(df$Ozone))
count.fields(is.na(df$Ozone))
summary(is.na(df$Ozone))
mean(df$Ozone)
mean(dropna(df$Ozone))
mean(drop.na(df$Ozone))
mean(na.omit(df$Ozone))
sub.df <- subset(df,(Ozone >31 & Temp >90))
sub.df
mean(sub.df$Solar.R)
df[df$Month == 6,mean("Temp")]
df[df$Month == 6,mean(na.omit("Temp"))]
subset(df,Month == 6)
df1 <- ubset(df,Month == 6)
df1 <- subset(df,Month == 6)
df1
mean(df1$Temp)
df1 <- subset(df,Month == 5)
max(df1$Ozone)
max(na.omit(df1$Ozone))
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
install_from_swirl("R Programming")
install_from_swirl("R Programming")
swirl()
swirl()
5+7
x <- 5+7
x
y = x-3
y <- x - 3
y
z <- c(1.1, 9, 3.14)
c?
c???
c.??
help(c)
swirl()
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
?args
args(list.files
)
old.dir <- getwd()
dir.create(testdir)
dir.create(old.dir,testdir)
?dir.create
dir.create(old.dir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("testdir")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R",folder1,folder2)
file.path("mytest3.R","folder1","folder2")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path(testdir2))
old.dir
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq = seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect = c(0,5,55,-10,6)
num_vect <- c(0,5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name = c(my_char,"Sanket")
my_name
paste(my_name)
paste(my_name,collapse = " ")
paste("Hello","World!",sep = " ")
paste("Hello","world!",sep = " ")
paste("X","Y","Z",sep="")
paste(c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
bye()
hi
"Hello world"
swirl()
bye()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files
)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest1.R")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3
.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd(old.dir)
